# Generated by Django 4.2.7 on 2025-06-09 17:07

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_achat', models.DateTimeField(default=django.utils.timezone.now)),
                ('facture', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AchatLigne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField()),
                ('prix_achat', models.DecimalField(decimal_places=2, max_digits=10)),
                ('lot', models.CharField(blank=True, max_length=250, null=True)),
                ('date_expiration', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('date_ajout', models.DateTimeField(default=django.utils.timezone.now)),
                ('achat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='Produits.achat')),
            ],
            options={
                'ordering': ['-date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('NIF', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=132, null=True)),
                ('address', models.CharField(default='', max_length=64)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('contact', models.CharField(blank=True, max_length=100)),
                ('adresse', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Produits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Produits.categories')),
            ],
            options={
                'verbose_name_plural': 'Produits',
            },
        ),
        migrations.CreateModel(
            name='Stockes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField(default=0)),
                ('prix_vente', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock_minimum', models.PositiveIntegerField(default=5, help_text='Quantité minimale avant alerte')),
                ('achat_ligne', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Produits.achatligne')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Produits.produits')),
            ],
            options={
                'verbose_name_plural': 'Stockes',
                'ordering': ['-achat_ligne__date_ajout'],
                'unique_together': {('produit', 'achat_ligne')},
            },
        ),
        migrations.CreateModel(
            name='Vente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_vente', models.DateTimeField(default=django.utils.timezone.now)),
                ('statupaiement', models.CharField(choices=[('C', 'Cash'), ('D', 'Dette'), ('CH', 'Cheque')], default='C', max_length=50)),
                ('date_payement', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Produits.customer')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('adresse', models.CharField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(choices=[('ADMIN', 'Administrateur'), ('VENDEUR', 'Vendeur'), ('GESTIONNAIRE', 'Gestionnaire de stock')], default='VENDEUR', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True, null=True)),
                ('derniere_connexion', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
                'db_table': 'produits_customuser',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VenteProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField(default=1)),
                ('prix_vente', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Produits.stockes')),
                ('vente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='Produits.vente')),
            ],
        ),
        migrations.AddField(
            model_name='vente',
            name='vendeur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ventes_effectuees', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ModificationStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_modification', models.CharField(choices=[('ENTREE', 'Entrée en stock'), ('SORTIE', 'Sortie de stock'), ('AJUSTEMENT', "Ajustement d'inventaire")], max_length=10)),
                ('quantite', models.PositiveIntegerField()),
                ('date_modification', models.DateTimeField(auto_now_add=True)),
                ('raison', models.CharField(blank=True, max_length=255, null=True)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modifications', to='Produits.stockes')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='modifications_stock', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Modification de stock',
                'verbose_name_plural': 'Modifications de stock',
                'ordering': ['-date_modification'],
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='save_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='achatligne',
            name='conditionnement',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='Produits.condition'),
        ),
        migrations.AddField(
            model_name='achatligne',
            name='produit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Produits.produits'),
        ),
        migrations.AddField(
            model_name='achat',
            name='fournisseur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Produits.fournisseur'),
        ),
        migrations.AddField(
            model_name='achat',
            name='utilisateur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='achats_effectues', to=settings.AUTH_USER_MODEL),
        ),
    ]
